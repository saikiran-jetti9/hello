name: Accounts Checks

on:
  pull_request:
    branches:
      - main
    paths:
      - 'beeja-services/beeja-accounts/**'
jobs:

  #CODE LINTING
  #linux
  lint-linux:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Run Spotless Apply
      working-directory: beeja-services/beeja-accounts
      run: gradle spotlessApply

    # - name: Run Checkstyle
    #   working-directory: beeja-services/beeja-accounts
    #   run: gradle checkstyleMain
  #macos
  lint-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Run Spotless Apply
      working-directory: beeja-services/beeja-accounts
      run: gradle spotlessApply

    # - name: Run Checkstyle
    #   working-directory: beeja-services/beeja-accounts
    #   run: gradle checkstyleMain
  #windows
  lint-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Run Spotless Apply
      working-directory: beeja-services/beeja-accounts
      run: gradle spotlessApply

    # - name: Run Checkstyle
    #   working-directory: beeja-services/beeja-accounts
    #   run: gradle checkstyleMain

  # JUNIT Testing
  junit-tests:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Run Tests
      working-directory: beeja-services/beeja-accounts
      run: gradle test

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: junit-results
        path: build/test-results/test/

  trivy-scan-vuln-type:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'              # Scans project files
          vuln-type: 'library'         # Only dependencies
          format: 'sarif'              # Output format for GitHub Security
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'    # Only critical & high vulnerabilities

      - name: Upload SARIF Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results.sarif